linux_task:
  container:
    image: node:lts-slim
  test_script:
    - apt-get update
    - export DEBIAN_FRONTEND="noninteractive"
    - apt-get install -y
                rpm
                build-essential
                git
                libsecret-1-dev
                fakeroot
                libx11-dev
                libxkbfile-dev
                libgdk-pixbuf2.0-dev
                libgtk-3-dev
                libxss-dev
                libasound2-dev
                libnss3
                xvfb
    - yarn install || sleep 1 && yarn install || sleep 2 && yarn install || sleep 2 && yarn install || sleep 2 && yarn install || sleep 2 && yarn install
    - yarn run build
    - yarn run build:apm
    - Xvfb :99 & DISPLAY=:99 PLAYWRIGHT_JUNIT_OUTPUT_NAME=report.xml npx playwright test --reporter=junit,list
  junit_artifacts:
    path: report.xml
    type: text/xml
    format: junit
  videos_artifacts:
    path: ./tests/videos/**
  build_binary_script: yarn dist
  binary_artifacts:
    path: ./binaries/*

mac_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest
  test_script:
    - brew install node@16 yarn git python
    - ln -s /opt/homebrew/bin/python3 /opt/homebrew/bin/python
    - export PATH="/opt/homebrew/bin:/opt/homebrew/opt/node@16/bin:$PATH"
    - yarn install || sleep 1 && yarn install || sleep 2 && yarn install || sleep 2 && yarn install || sleep 2 && yarn install || sleep 2 && yarn install
    - yarn run build
    - yarn run build:apm
    - Xvfb :99 & DISPLAY=:99 PLAYWRIGHT_JUNIT_OUTPUT_NAME=report.xml npx playwright test --reporter=junit,list
  junit_artifacts:
    path: report.xml
    type: text/xml
    format: junit
  videos_artifacts:
    path: ./tests/videos/**
  build_binary_script:
    - export PATH="/opt/homebrew/bin:/opt/homebrew/opt/node@16/bin:$PATH"
    - yarn dist
  binary_artifacts:
    path: ./binaries/*

windows_task:
  windows_container:
    image: cirrusci/windowsservercore:2019
  env:
    CIRRUS_SHELL: bash
  test_script:
    - choco install nodejs --version=16.15.1 -y --install-directory='C:\Programs\node'
    - choco install python -y --install-directory='C:\Programs\python'
    - choco install git -y --install-directory='C:\Programs\git'
    - ls C:/Programas/node/bin
    - ls C:/Programs/python
    - ls C:/Programas/git
    - export PATH="C:/Programas/node/bin:C:/Programs/python:C:/Programas/git:$PATH"
    - npx yarn install || sleep 1 && npx yarn install || sleep 2 && npx yarn install || sleep 2 && npx yarn install || sleep 2 && npx yarn install || sleep 2 && npx yarn install
    - npx yarn run build
    - npx yarn run build:apm
    - Xvfb :99 & DISPLAY=:99 PLAYWRIGHT_JUNIT_OUTPUT_NAME=report.xml npx playwright test --reporter=junit,list
  junit_artifacts:
    path: report.xml
    type: text/xml
    format: junit
  videos_artifacts:
    path: ./tests/videos/**
  build_binary_script:
    - export PATH="C:/Programas/node/bin:C:/Programs/python:C:/Programas/git:$PATH"
    - npx yarn dist
  binary_artifacts:
    path: ./binaries/*
